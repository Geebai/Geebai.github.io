<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>既白</title>
  
  <subtitle>天才是什么样子的呢？</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-10T09:17:43.604Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>G1bai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql</title>
    <link href="http://example.com/2021/08/09/Mysql/"/>
    <id>http://example.com/2021/08/09/Mysql/</id>
    <published>2021-08-09T12:29:07.000Z</published>
    <updated>2021-08-10T09:17:43.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql学习笔记"><a href="#Mysql学习笔记" class="headerlink" title="Mysql学习笔记"></a>Mysql学习笔记</h1><h3 id="一、存储引擎"><a href="#一、存储引擎" class="headerlink" title="一、存储引擎"></a>一、存储引擎</h3><p>1、查看Mysql服务实例支持的存储引擎</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show engines<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>2、设置默认的存储引擎</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">set</span> <span class="attribute">default_storage_engine</span>=MyISAM;</span><br><span class="line"><span class="comment">#设置存储引擎为MyISAM，Mysql5.6的默认存储引擎为InooDB。该设置为临时设置。</span></span><br></pre></td></tr></table></figure><h3 id="二、数据库操作-Database"><a href="#二、数据库操作-Database" class="headerlink" title="二、数据库操作 (Database)"></a>二、数据库操作 (Database)</h3><p>1、创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名;#创建数据库</span><br><span class="line">例如:</span><br><span class="line">create database student;创建一个名字为student的数据库</span><br><span class="line">create database student DEFAULT CHARSET=&#x27;utf8&#x27;;#指定字符集，可以避免中文乱码问题</span><br></pre></td></tr></table></figure><p>2、显示数据库结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database 数据库名;#查看数据库的结构</span><br></pre></td></tr></table></figure><p>3、删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名;</span><br></pre></td></tr></table></figure><h3 id="三、数据类型"><a href="#三、数据类型" class="headerlink" title="三、数据类型"></a>三、数据类型</h3><p>1、整形</p><p>2、小数类型(decimal,float 单精度4字节,double 双精度8字节)</p><p><strong>decimal(length,precision)</strong>  length表示最大位数，precision表示精度</p><p>3、字符类型char()定长字符串、varchar()可变长字符串、text文本类型</p><p>4、日期类型 </p><p>date 默认格式YYYY-MM-DD （引用的时候要加引号’2021-08-09’），</p><p>time 默认格式HH:ii:ss，</p><p>year</p><p><strong>datetime</strong>和timestamp YYYY-MM-DD HH-ii-ss日期与时间的混合数据类型</p><h3 id="四、数据库表-table"><a href="#四、数据库表-table" class="headerlink" title="四、数据库表 (table)"></a>四、数据库表 (table)</h3><p>注意：对表进行操作之前需要选择数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use 数据库名;</span><br></pre></td></tr></table></figure><p>1、创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Create table 表名(</span><br><span class="line">字段名1 数据类型,</span><br><span class="line">字段名2 数据类型,</span><br><span class="line">字段名3 数据类型);</span><br></pre></td></tr></table></figure><p>2、查看表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表明; # 查看表的结构，不显示表中数据</span><br></pre></td></tr></table></figure><p>3、查看表中数据信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table 表名; #显示表中详细信息</span><br></pre></td></tr></table></figure><p>4、删除表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名; #删除表后，会删除结构定义文件，表的索引和表中数据</span><br></pre></td></tr></table></figure><p>5、表中字段操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop 字段名; #删除字段</span><br><span class="line">alter table 表名 add 新字段名 数据类型[约束条件][first/(after 旧字段名)];</span><br><span class="line">#添加新字段</span><br><span class="line">alter table 表名 change 旧字段名 新字段名 新数据类型; #修改字段名</span><br><span class="line">alter table 表名 modify 字段名 新数据类型; #修改数类型</span><br></pre></td></tr></table></figure><p>6、修改表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rename table 旧表名 to 新表名;</span><br><span class="line">alter table 旧表名 rename 新表名; #两种操作等效</span><br></pre></td></tr></table></figure><p>7、数据插入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名[(字段顺序)] values (值列表);#不写字段顺序，则按默认顺序插入数据</span><br><span class="line">例如: insert into student values (&#x27;01&#x27;,&#x27;28&#x27;,&#x27;白白&#x27;,&#x27;2000-01-01&#x27;,22);</span><br></pre></td></tr></table></figure><p>使用查询语句插入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名[(字段顺序)] select(字段顺序) from 源表 where 条件表达式;</span><br></pre></td></tr></table></figure><p>8、复制表结构和内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Create table 新表 select* from 旧表;#复制表结构</span><br><span class="line">Create table 新表 select* from 旧表 where 1=2;只复制表结构，不复制数据</span><br></pre></td></tr></table></figure><p>9、表记录的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 字段名1=值,字段名2=值 [where 条件表达式];</span><br></pre></td></tr></table></figure><p>10、删除表记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 [where 条件表达式];</span><br><span class="line">truncate [table]表名; #清空表记录;</span><br><span class="line">#区别：Delete不加WHERE条件是删除所有数据</span><br><span class="line">#Truncate不能够加WHERE条件</span><br><span class="line">#Delete可以加WHERE条件</span><br><span class="line">#Truncate会重置AUTO_INCREMENT</span><br><span class="line">#Delete可以进行回滚操作</span><br></pre></td></tr></table></figure><p>11、表记录的查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select 字段列表 [as]别名 from 表名 [where 条件表达式]; </span><br></pre></td></tr></table></figure><h3 id="五、查询语句"><a href="#五、查询语句" class="headerlink" title="五、查询语句"></a>五、查询语句</h3><p>1、表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select 字段列表 from 数据源</span><br><span class="line">[where条件表达式]</span><br><span class="line">[group by 分组字段]</span><br><span class="line">[having条件表达式]</span><br><span class="line">[orderby排序字段[asc|desc]]; #order by 默认asc升序</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、limit关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM table LIMIT [offset,]rows|rows;</span><br><span class="line">#如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，</span><br><span class="line">#第二个参数指定返回记录行的最大数目。初始记录行的偏移量是0(而不是1),参数必须是整数;</span><br><span class="line">SELECT * FROM table LIMIT 0,10;#第0行开始，共返回10行记录</span><br><span class="line">SELECT * FROM table LIMIT 99,18446744073709551615;</span><br><span class="line">#第100行开始到最后1行(一个很大的值)</span><br><span class="line">SELECT * FROM table LIMIT 5;#返回前5行记录</span><br></pre></td></tr></table></figure><p>3、distinct关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select distinct 字段名 from 表名;</span><br></pre></td></tr></table></figure><p>4、带条件的查询</p><table><thead><tr><th>查询条件</th><th>符号</th></tr></thead><tbody><tr><td>比较</td><td>=、&lt;、&lt;=、&gt;=、!=、&lt;&gt;、&lt;=&gt;</td></tr><tr><td>指定范围</td><td>BETWEEN AND、NOT BETWEEN AND</td></tr><tr><td>匹配字符</td><td>LIKE 、NOT LIKE、IN、NOT IN</td></tr><tr><td>是否为空</td><td>IS NULL 、IS NOT NULL</td></tr><tr><td>多个查询条件</td><td>AND、OR</td></tr></tbody></table><h3 id="六、约束"><a href="#六、约束" class="headerlink" title="六、约束"></a>六、约束</h3><p>1、常见的约束条件</p><p>主键（primary key）</p><p>约束外键（Foreign Key）</p><p>约束唯一性（Unique）</p><p>约束默认值（Default）</p><p>约束非空（NOT NULL）</p><p>约束检查（Check）约束  # MYSQL不支持check约束，写了没有作用，但不会报错</p><p>2、非空约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table t_user (</span><br><span class="line">id int(10),</span><br><span class="line">namevarchar(32) not null</span><br><span class="line">);#如果没有插入name字段数据，则会报错</span><br><span class="line">alter table t_user modify name varchar(32);#取消非空约束</span><br><span class="line">alter table t_user modify id int not null;#添加非空约束</span><br></pre></td></tr></table></figure><p>3、唯一性约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table test_unique(</span><br><span class="line">id int(10),</span><br><span class="line">name varchar(32) not null,</span><br><span class="line">email varchar(128) unique</span><br><span class="line">); #如果email字段重复插入，则会报错，但是该字段可以为nul</span><br><span class="line">alter table 表名 drop index 字段名;#删除唯一性约束</span><br><span class="line">alter table 表名 add unique(字段名);添加唯一性约束</span><br></pre></td></tr></table></figure><p>4、主键约束</p><p>主键不仅可以是一列，也可以由表中的两列或多列来共同标识。——复合主键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table test_primary(</span><br><span class="line">id int not null primary key,</span><br><span class="line">name varchar(50)</span><br><span class="line">);#设置id为主键</span><br><span class="line">create table test3_primary</span><br><span class="line">(id int not null,</span><br><span class="line">name varchar(50) not null,</span><br><span class="line">primary key(id,name)</span><br><span class="line">);#主键为id和name字段</span><br><span class="line">alter table 表名 drop primary key;#删除主键</span><br><span class="line">alter table 表名 add primary key(字段名);#添加主键</span><br></pre></td></tr></table></figure><p>5、默认值约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table test1_default(</span><br><span class="line">id int not null,</span><br><span class="line">name varchar(50) DEFAULT&#x27;abc&#x27;</span><br><span class="line">);#插入数据的时候，如果不写入name的值，则默认显示填入abc</span><br><span class="line">create table auto_test(</span><br><span class="line">id int not null auto_increment primary key,</span><br><span class="line">name varchar(25)</span><br><span class="line">);#创建表auto_test设置id的值为自增长</span><br><span class="line">ALTER TABLE 表名 ALTER 列名 DROP DEFAULT;#删除默认值约束</span><br><span class="line">ALTER TABLE 表名 ALTER 列名 SET DEFAULT &#x27;默认值&#x27;;#添加默认值约束</span><br></pre></td></tr></table></figure><h3 id="七、常见函数"><a href="#七、常见函数" class="headerlink" title="七、常见函数"></a>七、常见函数</h3><p>1、常用函数</p><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>MAX()</td><td>计算列的最大值</td></tr><tr><td>MIN()</td><td>计算列的最小值</td></tr><tr><td>Count()</td><td>统计行数</td></tr><tr><td>Sum()</td><td>获取单个列的合计值</td></tr><tr><td>Avg()</td><td>计算某个列的平均值</td></tr><tr><td>group_conca()</td><td>将多行字符串变成一行</td></tr><tr><td>replace(‘a’,’b’)</td><td>将字符串中的a替换成b</td></tr><tr><td>CURTIME()或CURRENT_TIME</td><td>返回当前日期</td></tr><tr><td>DATE_ADD与DATE_SUB</td><td>加上多少日期与减去多少日期  例如select date_add(“2016-12-31 23:59:59”,interval 1day);</td></tr></tbody></table><p>2、分组查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT  sex,AVG(age) AS 平均年龄 FROM users</span><br><span class="line">GROUP BY sex;#统计每个性别的平均年龄</span><br></pre></td></tr></table></figure><p>3、Having关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT province,sex,COUNT(cname) FROM users </span><br><span class="line">GROUP BY province,sex</span><br><span class="line">HAVING COUNT(cname)&gt;3;</span><br><span class="line">#查询每一个省份男女生的人数，同时只需要显示人数数量超过3人的记录,having后面加聚合函数条件</span><br></pre></td></tr></table></figure><h3 id="八、高级查询"><a href="#八、高级查询" class="headerlink" title="八、高级查询"></a>八、高级查询</h3><p>1、内连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#等值连接3种连接方式</span><br><span class="line">select * from emp,dept where Dept_id=dept.id;</span><br><span class="line">#使用连接符 = </span><br><span class="line">select * from emp join dept on Dept_id=dept.id;</span><br><span class="line">#使用join .. on..</span><br><span class="line">select * from emp inner join dept onDept_id=dept.id;</span><br><span class="line">#使用innerjoin .. on..</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select e.ename as &#x27;姓名&#x27;,s.id as &#x27;等级&#x27; from enginfoe,salgrade s </span><br><span class="line">where e.sal BETWEEN s.local and s.maxline;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#自身连接：一个表与其自己进行连接</span><br><span class="line">SELECT  Qir.cno,Qir.cname, Qir.cpno,sec.cname FROM course Qir,course sec WHERE Qir.cpno=sec.cno;#查询每门课程的先修课名称</span><br></pre></td></tr></table></figure><p>2、外连接(左、右连接)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.sno,sname,sex,age,dept,cno,grade FROM student s LEFT OUT JOIN sc ON s.sno=sc.sno;</span><br><span class="line">#左连接，如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。右连接与左连接相反</span><br></pre></td></tr></table></figure><p>3、主外键关系</p><p>1.两张表必须都是InnoDB表，并且它们没有临时表。</p><p>2.建立外键关系的对应列必须具有相似的InnoDB内部数据类型</p><p>3.建立外键关系的对应列必须建立了索引。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create table stuInfo(</span><br><span class="line">Scodeint primary key,-- 学生的学号</span><br><span class="line">Sname char(10),-- 学生的姓名</span><br><span class="line">Saddress varchar(50),-- 学生的住址</span><br><span class="line">Sgrade int,-- 学生所在班级</span><br><span class="line">Semail varchar(50),-- 学生的邮箱地址</span><br><span class="line">Sbrith date); </span><br><span class="line"></span><br><span class="line">create table score(</span><br><span class="line">studentID int,</span><br><span class="line">coureseID int,</span><br><span class="line">score int,</span><br><span class="line">scoreID int primary key,</span><br><span class="line">foreign key(studentID) references stuInfo(Scode)#添加外键</span><br><span class="line">);</span><br><span class="line">alter table 表名称 drop foreign key 外键名称;#删除外键</span><br><span class="line">alter table 表名称 add foreign key (列名称)  references 关联表名称(列名称);#添加外键</span><br></pre></td></tr></table></figure><p>4、子查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM article WHERE uid=(SELECT uid FROM user WHERE status=1 ORDER BY uid DESC LIMIT 1)#子查询允许把一个查询嵌套在另一个查询当中。</span><br></pre></td></tr></table></figure><p>5、派生表</p><p>在子查询返回的值中，也可能返回一个表，如果将子查询返回的虚拟表再次作为FROM子句的输入时，这就子查询的虚拟表就成为了一个派生表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT t1.name,t2.sex,a.city,a.age FROM t1,(SELECT city, MAX(age) FROM t2 GROUP BY city)a WHERE t1.age=t2.age;#将查询当作一个表</span><br></pre></td></tr></table></figure><p>6、联合查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT cname,sex FROM users </span><br><span class="line">UNION      </span><br><span class="line">SELECT name,sex FROMteacher;#筛选掉相同的结果</span><br><span class="line"></span><br><span class="line">SELECT cname,sex FROM users </span><br><span class="line">UNION  ALL    </span><br><span class="line">SELECT name,sex FROM teacher;#保留相同项</span><br></pre></td></tr></table></figure><h3 id="九、索引和视图"><a href="#九、索引和视图" class="headerlink" title="九、索引和视图"></a>九、索引和视图</h3><p>1、创建索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">字段名1 数据类型[约束条件],</span><br><span class="line">... [其他约束条件],</span><br><span class="line">... [ unique | fulltext ]  index  [索引名] ( 字段名[(长度)]  [ asc | desc ] ) </span><br><span class="line">) engine=存储引擎类型 default charset=字符集类型 #建表时添加索引</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create [ unique | fulltext ] index 索引名 on 表名( 字段名[(长度)]  [ asc | desc ] );</span><br><span class="line">alter table 表名add [ unique | fulltext ] index 索引名( 字段名[(长度)]  [ asc | desc ] );</span><br><span class="line">#建表后添加索引</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select studentid,score from score use index(index_stuid)  where studentid&gt;=3;#使用索引</span><br><span class="line">drop index 索引名 on 表名;#删除索引</span><br></pre></td></tr></table></figure><p>2、视图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create view 视图名[ (视图字段列表) ] as select语句;#创建视图</span><br><span class="line">drop view 视图名;#删除视图</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Mysql学习笔记&quot;&gt;&lt;a href=&quot;#Mysql学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Mysql学习笔记&quot;&gt;&lt;/a&gt;Mysql学习笔记&lt;/h1&gt;&lt;h3 id=&quot;一、存储引擎&quot;&gt;&lt;a href=&quot;#一、存储引擎&quot; class=&quot;head</summary>
      
    
    
    
    <category term="Mysql" scheme="http://example.com/categories/Mysql/"/>
    
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Mysql" scheme="http://example.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>夜曲</title>
    <link href="http://example.com/2019/07/26/%E5%A4%9C%E6%9B%B2/"/>
    <id>http://example.com/2019/07/26/%E5%A4%9C%E6%9B%B2/</id>
    <published>2019-07-26T12:00:14.000Z</published>
    <updated>2021-08-09T07:46:03.598Z</updated>
    
    <content type="html"><![CDATA[<p>静止了，所有的花开<br>遥远了，清晰了爱</p><p>天郁闷，爱却更喜欢</p><p>那时候，我不懂</p><p>这叫爱，你喜欢</p><p>站在那窗台，你好久</p><p>都没再来，彩色的</p><p>时间染上空白，是你流的泪晕开</p><p>不要你离开，距离隔不开</p><p>思念变成海，在窗外进不来</p><p>原谅说太快，爱成了阻碍</p><p>手中的风筝放太快，回不来</p><p>不要你离开，回忆划不开</p><p>欠你的宠爱，我在等待重来</p><p>天空仍灿烂，它爱着大海</p><p>情歌被打败，爱已不存在</p><p>你喜欢，站在那窗台</p><p>你好久，都没再来</p><p>彩色的，时间染上空白</p><p>是你流的泪晕开，不要你离开</p><p>距离隔不开，思念变成海</p><p>在窗外进不来，原谅说太快</p><p>爱成了阻碍，手中的风筝放太快</p><p>回不来，不要你离开</p><p>回忆划不开，欠你的宠爱</p><p>我在等待重来，天空仍灿烂</p><p>它爱着大海，情歌被打败</p><p>爱已不存在</p>]]></content>
    
    
    <summary type="html">夜曲歌词</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>花海</title>
    <link href="http://example.com/2019/07/26/%E8%8A%B1%E6%B5%B7/"/>
    <id>http://example.com/2019/07/26/%E8%8A%B1%E6%B5%B7/</id>
    <published>2019-07-26T12:00:14.000Z</published>
    <updated>2021-08-09T07:45:25.438Z</updated>
    
    <content type="html"><![CDATA[<p>静止了，所有的花开<br>遥远了，清晰了爱</p><p>天郁闷，爱却更喜欢</p><p>那时候，我不懂</p><p>这叫爱，你喜欢</p><p>站在那窗台，你好久</p><p>都没再来，彩色的</p><p>时间染上空白，是你流的泪晕开</p><p>不要你离开，距离隔不开</p><p>思念变成海，在窗外进不来</p><p>原谅说太快，爱成了阻碍</p><p>手中的风筝放太快，回不来</p><p>不要你离开，回忆划不开</p><p>欠你的宠爱，我在等待重来</p><p>天空仍灿烂，它爱着大海</p><p>情歌被打败，爱已不存在</p><p>你喜欢，站在那窗台</p><p>你好久，都没再来</p><p>彩色的，时间染上空白</p><p>是你流的泪晕开，不要你离开</p><p>距离隔不开，思念变成海</p><p>在窗外进不来，原谅说太快</p><p>爱成了阻碍，手中的风筝放太快</p><p>回不来，不要你离开</p><p>回忆划不开，欠你的宠爱</p><p>我在等待重来，天空仍灿烂</p><p>它爱着大海，情歌被打败</p><p>爱已不存在</p>]]></content>
    
    
    <summary type="html">花海歌词</summary>
    
    
    
    
  </entry>
  
</feed>
